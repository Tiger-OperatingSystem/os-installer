#!/bin/bash

host_name="Tiger_Machine"

function getLanguage(){
  language=$(
    yad --borders=32 --text="<big><b>Escolha o idioma do sistema</b></big>\n" --list --fixed --column=    \
        --center --no-headers --column=  --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"   \
        "pt_BR" "Português Brasileiro"                                                                    \
        "pt" "Português Europeu"                                                                          \
        --hide-column=1)

  botao=$?

  language_descritive=$(echo "${language}" | cut -d'|' -f2)
  language=$(echo "${language}" | cut -d'|' -f1)

  [ "${language}" = "pt_BR" ] && {
    keyboard_language="br"
  }

  [ "${language}" = "pt" ] && {
    keyboard_language="pt"
  }

  return ${botao}
}

function getKeyboard(){
  [ ! "${1}" = "--skip-intro" ] && {
     yad --text="<big><b>O idioma do teclado está definido como '${language_descritive}'</b>\n\nDeseja manter?</big>\n"  \
        --borders=32 --list --fixed  --center --width=640 --title="TigerOS 23 - Instalar sistema" --button=gtk-no:1 --button=gtk-yes:0  \
        && {
          getKeyboardVariation
          return
        }
  }
  

  layouts=""
  layouts=$(grep -A9999 '! layout' /usr/share/X11/xkb/rules/evdev.lst | sed -n 2,9999p)
  layouts=$(echo "${layouts}" | sed -n 1,$(echo "${layouts}" | grep -m1 -n '!' | cut -d: -f1)p \
                              | grep -Ev '!|^$|custom' \
                              | sed 's|Portuguese|Português|g;s|Spanish|Español|g;s| (|§(|g'\
                              | sed ':l s/\(([^ )]*\)[ ]/\1§/;tl'\
                              | sed 's|§| |g' | awk '{print $2,$1}' | sort)

  keyboard_language=$(
    yad --borders=32 --text="<big><b>Escolha O idioma do seu teclado</b></big>\n" --list  --width=640 --height=480  \
        --fixed --hide-column=2 --center --no-headers --column= --column=  --title="TigerOS 23 - Instalar sistema"    \
        ${layouts}
  )
  
  botao=$?
  
  keyboard_language=$(echo "${keyboard_language}" | cut -d'|' -f2)

  [ "${botao}" = "0" ] && {
    getKeyboardVariation
    return
  }

  return ${botao}
}

function getKeyboardVariation() {
  
  variations=""
  variations=$(grep -A9999 '! variant' /usr/share/X11/xkb/rules/evdev.lst | sed -n 2,9999p)
  variations=$(echo "${variations}" | sed -n 1,$(echo "${variations}" | grep -m1 -n '!' | cut -d: -f1)p          \
                                    | grep -Ev '!|^$|custom'                                                     \
                                    | sed ':l s/\(([^ )]*\)[ ]/\1§/;tl' | sed 's| (|§(|g'                        \
                                    | sed 's|§| |g' | grep "${keyboard_language}": | awk '{print $1,$3}' | sort  )

  keyboard_variation=$(
    yad --borders=32 --text="<big><b>Escolha a variação de layout</b></big>\n" --list                                     \
        --fixed --center --no-headers --column= --column= --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"  \
        "      " "Tradicional" \
        ${variations} 
  )

  botao=$?

  keyboard_variation=$(echo "${keyboard_variation}" | cut -d'|' -f1)

  keyboard_layout=${keyboard_language}_${keyboard_variation}
  
  [ "${keyboard_variation}" = "      " ] && {
    keyboard_layout=${keyboard_language}
  }
  
  echo "   Layout: ${keyboard_layout}"
  echo " Language: ${keyboard_language}"
  echo "Variation: ${keyboard_variation}"


  [ ! "${botao}" = "0" ] && {
    getKeyboard --skip-intro 
    return
  }

  return 0
}
 
function getAccountDetails(){
  erro_validacao="${1}"; shift
  
  [ "${erro_validacao}" = "" ] && {
    erro_validacao="Essa senha será utilizada para instalar programas"
  }
  
  account=$(
    yad --borders=32 --text="<big><b>Criar o usuário administrador</b></big>\n<small>${erro_validacao} </small>\n"    \
        --form --fixed --center --width=640 --height=480  --title="TigerOS 23 - Instalar sistema"                     \
        --field="Nome de usuário  "                                                                   \
        --field=" ":lbl --field="Senha de acesso":H                                                                   \
        --field="Confirme a senha":H                                                                                  \
        --field=" ":lbl "${@}"
  )

  botao=$?

  [ ! "${botao}" = "0" ] && {
    return 1
  }
  
  user_name=$(echo ${account}     | cut -d\| -f1)
  
  user_password=$(echo ${account} | cut -d\| -f3)
  test_password=$(echo ${account} | cut -d\| -f4)
  
  [ "${user_name}" = "root" ] && {
    getAccountDetails '<b>Erro:</b> root é um nome reservado' "${user_fullname}" "" "" "" "${user_password}" "${test_password}"
  }
  
  [ "${user_name}" = "" ] && {
    getAccountDetails '<b>Erro:</b> Faltou o nome de usuário' "${user_fullname}" "" "${user_name}" "" "${user_password}" "${test_password}"
  }
  
  user_name_valid=$(echo "${user_name}" | iconv -t ASCII//TRANSLIT | tr '[:upper:]' '[:lower:]' \
                                        | tr ' ' '_' | sed 's|[^a-zA-Z0-9_-]||g;s|^-|_|g')
                                        
  [ ! "${user_name}" = "${user_name_valid}" ] && {
    yad --text="<big><b>Nome '${user_name}' não é válido como nome de usuário</b>\n\n O instalador sugere <b>${user_name_valid}</b>, deseja utilizar?</big>\n"  \
        --borders=32 --list --fixed  --center --width=640 --title="TigerOS 23 - Instalar sistema" --button=gtk-no:1 --button=gtk-ok:0                             \
        || {
          getAccountDetails '<b>Erro:</b> Nome de usuário inválido' "${user_fullname}" "" "${user_name_valid}" "" "${user_password}" "${test_password}"
          return
        }
    
    user_name="${user_name_valid}"
  }
  
  [ "${user_password}" = "" ] && {
    getAccountDetails '<b>Erro:</b> Faltou a senha' "${user_fullname}" "" "${user_name}" "" "" ""
  }
  
  [ ! "${user_password}" = "${test_password}" ] && {
    getAccountDetails "<b>Erro:</b> Senhas não conferem" "${user_fullname}" "" "${user_name}" 
    return
  }
  
  return 0
}

function getTimezone(){
  cd /usr/share/tiger-os/
  country=$(yad --borders=32 --text="<big><b>Escolha o país onde você está</b></big>\nEssa lista segue o padrão ISO 3166-2\n" --list    \
                --fixed --hide-column=1 --center --no-headers --column= --column= --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"    \
                $(sed 's|"||g;s| | |g;s|;| |g;s|\r||g' lista_paises.csv))

  botao=$?
  [ ! "${botao}" = "0" ] && {
    return 1
  }

  country=$(echo $country | cut -d '|' -f1)

  timezone=$(yad --borders=32 --text="<big><b>Escolha a região</b></big>\nEscolha a cidade província, estado ou região em que você está.\nSe não estiver na lista escolha a mais próxima\n" --list    \
                 --fixed --hide-column=1 --center --no-headers --column= --column= --column= --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"    \
                 $(grep "${country}" timezones_lista.csv | cut -d ';' -f 2-4 | sed 's|"||g;s| | |g;s|;| |g;s|\r||g'))

  botao=$?
  [ ! "${botao}" = "0" ] && {
    getTimezone
    return
  }

  timezone=$(echo $timezone | cut -d '|' -f1)
  return 0
}

function getInstallMethod() {
  method=$(
    yad --borders=32 --text="<big><b>Escolha o método de instalação</b></big>\n<small>${1} </small>\n" --list --fixed   \
        --center --no-headers --column= --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"                \
        "Usar o disco inteiro"                                                                                        \
        "Usar uma partição"                                                                                           \
        "Avançado"
  )

  botao=$?
  
  [ "${method}" = "Avançado|" ] && {
     gparted;
     sudo partprobe || true
     getInstallMethod;
     return;
  }

  [ ! "${botao}" = "0" ] && {
    return 1
  }
  
  getDisk
}
 
function getDisk(){
  disk=$(
    yad --borders=32 --text="<big><b>Escolha onde o TigerOS 23 será instalado</b></big>\n" --list --fixed   \
        --center --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"                           \
        --column="Dispositivo             " --column="Tamanho"                                            \
        $(lsblk -a -o NAME,SIZE,TYPE | grep disk | sed 's|disk||g;s|^|/dev/|g' | grep -Ev "ram|M")        
  )

  botao=$?
  [ ! "${botao}" = "0" ] && {
    getInstallMethod
    return
  }

  disk=$(echo ${disk} | cut -d\| -f1)

  [ "${method}" = "Usar o disco inteiro|" ] && {
     return 0
  }

  efi_part=$(sudo fdisk -l ${disk} | grep "EFI" | cut -d" " -f1)

  [ -d "/sys/firmware/efi" ] && {
    [ "${efi_part}" = "" ] && {
      yad --text="<big><b>O disco selecionado não possui uma partição EFI</b>\n\nPara usar esse disco, no modo avançado:\n   - Crie uma partição fat32 com pelo menos 512 MB\n   - Clique com o botão direito na partição criada\n   - Clique em Gerenciar sinalizadores\n   - Clique em Gerenciar sinalizadores\n   - Marque a opção esp\n   - Clique em fechar para salvar os sinalizadores\n\nApós fechar o particionador, poderá utilizar esse disco</big>\n"  \
        --borders=32 --list --fixed  --center --width=640 --title="TigerOS 23 - Instalar sistema" --button=gtk-ok:0  \

      getInstallMethod
      return 0
    }
  }
  
  [ "${method}" = "Usar uma partição|" ] && {
     getPartition
     return
  }
  
  [ "${method}" = "Avançado|" ] && {
     getPartition
     return
  }

  return 0
}

function getPartition(){
  partitions_list=$(lsblk -a -o NAME,SIZE,TYPE | grep part | sed 's| part||g;s|[├─└]||g;s|^|/dev/|g' | grep "${disk}" | grep -Ev "${efi_part}" | cut -d\| -f1 )
  
  [ "${partitions_list}" = "" ] && {
      yad --text="<big><b>O disco selecionado não possui partições</b>\n\nDeseja usar o disco todo?</big>\n"  \
        --borders=32 --list --fixed  --center --width=640 --title="TigerOS 23 - Instalar sistema" --button=gtk-no:1 --button=gtk-yes:0  \
        && {
          method="Usar o disco inteiro"
          return
        }

      getDisk
      return
  }

  sys_part=$(
    yad --borders=32 --text="<big><b>Escolha a partição onde o TigerOS 23 será instalado</b></big>\n" --list --fixed  \
        --center --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"                                            \
        --column="Dispositivo             " --column="Tamanho"                                                      \
        ${partitions_list}  \
  )

  sys_part=$(echo ${sys_part} | sed 's/|.*//g')

  botao=$?
  [ ! "${botao}" = "0" ] && {
    getDisk
    return
  }
  return 0
}

function confirmOptions() {
   summary="${1}"
   summary="${summary} - Definir o idioma como ${language_descritive} e:\n"
   summary="${summary} - Definir o layout de teclado como ${keyboard_layout} e:\n"
   summary="${summary} - Criar o usuário ${user_name} como administrador\n"
   [ "${method}" = "Usar o disco inteiro|" ] && {
     summary="${summary} - APAGAR todos os dados em ${disk} e:\n"
     summary="${summary}   - Criar uma partição EFI de 512 MB (partição de boot)\n"
     summary="${summary}   - Criar uma partição EXT4 usando o resto do espaço\n"
   } || {
     summary="${summary} - APAGAR todos os dados em ${sys_part}\n"
   }
   
   data=$(yad --borders=32 --text="<big><b>É isso que deseja fazer?</b></big>\n${summary}\nDefina o nome desse computador na rede:\n" --form --fixed --field="" --field="Fazer login automaticamente":CHK  \
        --center --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"  --button="Não, desejo mudar":42 --button="Sim, prosseguir":0 --separator="\n" "" "${2}" "${3}" )

  botao=$?

  [ ! "${botao}" = "0" ] && {
    return 1
  }

   host_name=$(echo "${data}" | sed -n 1p | tr -d '[:blank:]' )

   [ "${host_name}" = "" ] && {
      confirmOptions "<b>Erro:</b> Nome do computador na rede não pode ficar em branco\n\n" "Tiger_Machine" $(echo "${data}" | sed -n 2p)
      return
   }

   host_name_valid=$(echo "${host_name}" | iconv -t ASCII//TRANSLIT | tr ' ' '_' | sed 's|[^a-zA-Z0-9_-]||g;s|^-|_|g')
                                        
  [ ! "${host_name}" = "${host_name_valid}" ] && {
    yad --text="<big><b>Nome do computador '${host_name}' não é válido</b>\n\n O instalador sugere <b>${host_name_valid}</b>, deseja utilizar?</big>\n"  \
        --borders=32 --list --fixed  --center --width=640 --title="TigerOS 23 - Instalar sistema" --button=gtk-no:1 --button=gtk-ok:0                             \
        || {
          confirmOptions "<b>Erro:</b> Nome do computador inválido\n\n"
          return
        }
    
    host_name="${user_name_valid}"
  }

   autologin=$(echo "${data}" | sed -n 2p)

   [ "${autologin}" = "TRUE" ] && {
     autouser="${user_name}"
     autologin="--auto-login"
   }

   return 0
}

function doInstallation(){
  [ "${method}" = "Usar o disco inteiro|" ] && {
    sudo linstaller-fulldisk-setup --filesystem=ext4 "${disk}" | \
      yad --progress --pulsate --auto-close --text="<big><b> Configurando o disco ${disk}, aguarde</b></big>\n\n"  --width=640 --borders=32 --undecorated --center --no-buttons --hide-text
      
    sys_part="${disk}2"
    efi_part="${disk}1"
    
    echo "${disk}" | grep "^/dev/nvme" && {
      efi_part="${disk}p1"
      sys_part="${disk}p2"
    }
    
    echo "${disk}" | grep "^/dev/mmcblk" && {
      efi_part="${disk}p1"
      sys_part="${disk}p2"
    }
  }

  export MESSAGE_FILE=$(mktemp)

  umount -l "${efi_part}" || true
  umount -l "${efi_part}" || true

  umount -l "${sys_part}" || true
  umount -l "${sys_part}" || true
  
  linefeed="$(echo -e "\r")"
  temp_line=""
  while IFS= read -rn 1 char; do
    if [ "${char}" == "${linefeed}" ]; then
        line="${temp_line}"
        temp_line=""

        echo ${line} | grep -oP '\d+(?=%)'

    else
        temp_line="${temp_line}${char}"
    fi
  done < <(
           sudo linstaller-backend                           \
             --target-partition=${sys_part}                  \
             --efi-partition=${efi_part}                     \
             --user-name="${user_name}"                      \
             --user-password="${user_password}"              \
             --squashfs="/cdrom/casper/filesystem.squashfs"  \
             --hostname="${host_name}"                       \
             --timezone="${timezone}"                        \
             --keyboard-map="${keyboard_layout}"             \
             --target-disk=${disk}                           \
             --language=${language}                          \
             ${autologin} ${autouser} 2>> ${MESSAGE_FILE}
  ) | yad --progress --auto-close --width=640 --borders=32 --undecorated --center --no-buttons \
             --text="<big><b>Extraindo a imagem do TigerOS 23 aguarde</b></big>\n\n" --hide-text

  grep -q "Fail" "${MESSAGE_FILE}" && {
    yad --borders=32 --text="<big><b>Falha na instalação</b></big>\nlinstaller retornou:\n\n  $(grep "Fail" ${MESSAGE_FILE})\n\nPara mais informações veja o arquivo ${MESSAGE_FILE}\n" --form --fixed   \
        --center --width=640 --title="TigerOS 23 - Instalar sistema"  --button="Ok":0
    exit 1
  }

  yad --borders=32 --text="<big><b>TigerOS 23 instalado com sucesso</b></big>\nRemova o dispositivo de instalação e reinicie\n" --form --fixed   \
      --center --width=640 --title="TigerOS 23 - Instalar sistema"  --button="Ok":0
}

yad --borders=32 --text="<big><b>Bem vindo(a) a Instalação do TigerOS 23</b></big>\n\nVocê será guiado(a) no passo a passo para a correta instalação\ndo sistema, seja como sistema único ou em dual boot\n\nCaso tenha alguma dúvida assista a videoaula na área de trabalho\nVamos começar?\n" --form --fixed  \
      --center --width=640 --height=480 --title="TigerOS 23 - Instalar sistema"  --button=gtk-no:1 --button=gtk-yes:0 || exit

getLanguage       || exit
getKeyboard       || exit
getAccountDetails || exit
getTimezone       || exit
getInstallMethod  || exit
confirmOptions    "" "" "${host_name}" || exit
doInstallation    || exit
